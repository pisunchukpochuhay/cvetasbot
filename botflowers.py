–∏–º–ø–æ—Ä—Ç –∞—Å–∏–Ω—Å–∏–æ
–∏–º–ø–æ—Ä—Ç –ª–µ—Å–æ–∑–∞–≥–æ—Ç–æ–≤–∫–∞
–∏–º–ø–æ—Ä—Ç –º—É–ª—å—Ç–∏–ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥
–∏–∑ –∞–π–æ–≥—Ä–∞–º–º–∞ –∏–º–ø–æ—Ä—Ç –ë–æ—Ç, –î–∏—Å–ø–µ—Ç—á–µ—Ä, —Ç–∏–ø—ã
–∏–∑ –∞–π–æ–≥—Ä–∞–º–º–∞.—Ñ–∏–ª—å—Ç—Ä—ã –∏–º–ø–æ—Ä—Ç –ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ
–∏–∑ –∞–π–æ–≥—Ä–∞–º–º–∞.–∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç TelegramAPIError, TelegramConflictError
–ò–∑ —Ç–∏–ø—ã –∞–π–æ–≥—Ä–µ–º–º –∏–º–ø–æ—Ä—Ç InlineKeyboardMarkup, InlineKeyboardButton
–∏–∑ –∫–æ–ª–æ—Ä–∞–º–∞ –∏–º–ø–æ—Ä—Ç –§–æ—Ä, –°—Ç–∏–ª—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è

# –ò–Ω–æ—Ü–∏–∞–ª–∏–∑–∞–∑–∞—Ü–∏—è –∫–æ–ª–æ—Ä–∞–º–∞
–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è(–∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞=–ü—Ä–∞–≤–¥–∞)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
–ª–µ—Å–æ–∑–∞–≥–æ—Ç–æ–≤–∫–∞.–±–∞–∑–æ–≤—ã–π–ö–æ–Ω—Ñ–∏–≥(—Ñ–æ—Ä–º–∞—Ç='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
 —É—Ä–æ–≤–µ–Ω—å=–ª–µ—Å–æ–∑–∞–≥–æ—Ç–æ–≤–∫–∞.–ò–ù–§–û–†–ú–ê–¶–ò–Ø)
—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä = –≤–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞.getLogger(__–∏–º—è__)

# –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ /start
start_message = (
    "–û–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤—Ç—å –≤ \"–£—Ñ–ª–æ—Ä\"\n"
    "–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ —Å–≤–µ–∂–∏—Ö –±—É–∫–µ—Ç–æ–≤\n\n"
    "–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –º—ã?\–Ω"
    "üåµ 10 –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ\n"
    "üåµ –ë–æ–ª–µ–µ 20 –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤\n"
    "üåµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å–≤–µ–∂–µ—Å—Ç—å –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤\n\n"
    "–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n"
    "üíê –ë—ã—Å—Ç—Ä–∞—è –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n"
    "üíê –ë–æ–Ω—É—Å—ã —Å –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏\n"
    "üíê –ó–∞–±–æ—Ç–∞ –æ –∫–∞–∂–¥–æ–º –∫–ª–∏–µ–Ω—Ç–µ\n"
    "üíê –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç\n\n"
    "–î–ª—è –∑–∞–∫–∞–∑–∞ –±—É–∫–µ—Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ ü•∞\n"
    "https://t.me/+9uWpi78dXfUwNDAy\n\n"
)

# –ö–Ω–æ–ø–∫–∏
–∫–Ω–æ–ø–∫–∞1 = –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã(—Ç–µ–∫—Å—Ç="üåπ–ö–∞—Ç–∞–ª–æ–≥ –±—É–∫–µ—Ç–æ–≤, –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞üåπ", url="https://t.me/+9uWpi78dXfUwNDAy")
–∫–Ω–æ–ø–∫–∞2 = –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã(—Ç–µ–∫—Å—Ç="üå∏–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —Å –æ—Ç–∑—ã–≤–∞–º–∏üå∏", url="http://uflor.site")
–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ = InlineKeyboardMarkup(–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è_–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞=[[–∫–Ω–æ–ø–∫–∞1], [–∫–Ω–æ–ø–∫–∞2]])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /—Å—Ç–∞—Ä—Ç
–∞—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–µ—Ñ –Ω–∞—á–∏–Ω–∞—Ç—å(—Å–æ–æ–±—â–µ–Ω–∏–µ: —Ç–∏–ø—ã.–°–æ–æ–±—â–µ–Ω–∏–µ):
 –∂–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.–æ—Ç–≤–µ—Ç–∏—Ç—å(start_message, reply_markup=–∫–ª–∞–≤–∏—Ä–∞—Ç–∞)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–¥–Ω–æ–≥–æ –±–æ—Ç–∞
–∞—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–µ—Ñ –∑–∞–ø—É—Å—Ç–∏—Ç—å_–±–æ—Ç–∞(api_key: str, –∏–¥—Å: int, nudaÔøΩ—à—è_–±–æ—Ç—ã: —Å–≤–∏—Å–æ–∫, —É–¥–æ–µ–Ω–Ω—ã—ã—ã—ã—ã—ã—ã—ã—µ_–±–æ—Ç—ã: –Ω–∞—±—Ä):
 –ø–æ–∫–∞ –ü—Ä–∞–≤–¥–∞:
 –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å:
 –±–æ—Ç = –ë–æ—Ç(—Ç–æ–∫–µ–Ω=api_key)
 –¥–ø = –î–∏—Å–ø–µ—Ç—á–µ—Ä()
 –¥–ø.—Å–æ–æ–±—â–µ–Ω–∏–µ.—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å(–Ω–∞—á–∞—Ç—å, –ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ(–∫–æ–º–∞–Ω–¥—ã=['—Å—Ç–∞—Ä—Ç']))

            # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –¥–æ–ª–≥–æ–≥–æ –æ–ø—Ä–æ—Å–∞
 –∂–¥–∞—Ç—å –±–æ—Ç.—É–¥–∞–ª–∏—Ç—å_–≤–µ–±—Ö—É–∫(drop_pending_updates=–ü—Ä–∞–≤–¥–∞)

 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è(—Ñ"{–ü—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω.–ó–ï–õ–´–ô}–ë—Ç –Ω–∞ –ª–Ω–∏–∏ {–∏—¥—Å + 1} —Å —Ç–æ—Ç–º {api_key} –∏—Ü–∏–∞–ª–∏–∑–∏–Ä–æ–≤–∞–Ω —É—Å–ø—à–Ω–æ.{–°—Ç–∏–ª—å.–°–ë–†–û–°–ò–¢–¨_–í–°–ï}")
 –∂–¥–∞—Ç—å –¥–ø.–Ω–∞—á–∞—Ç—å_–æ–ø—Ä–æ—Å(–±–æ—Ç)
 –∫—Ä–æ–º–µ TelegramConflictError:
 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä.–æ—à–∏–±–∫–∞(—Ñ"{–ü—µ–µ–¥–Ω–∏–π –ø–ª–∞–Ω.–ö–†–ê–°–ù–´–ô}–û—à–∏–±–∫–∞ –∫—Ñ–ª–∏—Ç–∞ –ø—ÄÔøΩ –∑–∞–ø—É—Å–∫–µ –±–æ–Ç–∞ –≤ —Ç–æ–∫–µ {–∏—¥—Å + 1} —Å —Ç–æ–∫–æ–Ω–æ–º {api_key}: –°–µ–≤–µ—Ä –¢–µ–ª–µ–≥–∞–º–º–∞ –≥–æ–≤–Ät - –ö—Ω—Ñ–ª–∏t{–°—å.–°–ë–†–û–°–ò–¢–¨_–í–°–ï}")
 –Ω–µ—É–¥–∞–≤—à–∏–µ—Å—è_–±–æ—Ç—ã.–¥–æ–±–∞–≤–∏—Ç—å(api_key)  # –î–æ–±–∞–≤–ª—è–µ–º API –∫–ª—é—á –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
 –∫—Ä–æ–º–µ TelegramAPIError –∫–∞–∫ –µ:
 –µ—Å–ª–∏ ¬´–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π¬ª –≤ —Å—Ç—Ä(e):
 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä.–æ—à–∏–±–∫–∞(—Ñ"{–ü—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω.–ö–†–ê–°–ù–´–ô}–ù–µ–Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞—ø—É—Å–∫–∞ –±–æ–ÇÔøΩ –≤ —Å—Ç–æ–∫–µ {–∏—¥—Å + 1} —Å —Ç–æ–∫–æ–Ω–æ–º {api_key}: {e}{–°–Ç–∏—ª—å.–°–ë–†–û–°–ò–¢–¨_–í–°–ï}")
                if api_key not in deleted_bots:
                    with open('deletedBOT.txt', 'a') as file:
                        file.write(f"{api_key}\n")
                    deleted_bots.add(api_key)  # –î–æ–±–∞–≤–ª—è–µ–º API –∫–ª—é—á –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
            else:
                logger.error(f"{Fore.RED}Error starting bot at line {index + 1} with token {api_key}: {e}{Style.RESET_ALL}")
                failed_bots.append(api_key)  # –î–æ–±–∞–≤–ª—è–µ–º API –∫–ª—é—á –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
        except Exception as e:
            logger.error(f"{Fore.RED}Unexpected error starting bot at line {index + 1} with token {api_key}: {e}{Style.RESET_ALL}")
            failed_bots.append(api_key)  # –î–æ–±–∞–≤–ª—è–µ–º API –∫–ª—é—á –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫

        # –ü–∞—É–∑–∞ –Ω–∞ 24 —á–∞—Å–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
        await asyncio.sleep(86400)  # 86400 —Å–µ–∫—É–Ω–¥ = 24 —á–∞—Å–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –±–æ—Ç–æ–≤
def run_bot_process(api_key, index, failed_bots, deleted_bots):
    asyncio.run(run_bot(api_key, index, failed_bots, deleted_bots))

def main():
    try:
        with open('api_keys.txt', 'r') as file:
            api_keys = file.readlines()
    except FileNotFoundError:
        logger.error("api_keys.txt file not found.")
        return
    except Exception as e:
        logger.error(f"Error reading api_keys.txt file: {e}")
        return

    manager = multiprocessing.Manager()
    failed_bots = manager.list()
    deleted_bots = manager.list()
    processes = []

    for index, api_key in enumerate(api_keys):
        api_key = api_key.strip()
        if api_key and api_key not in failed_bots:
            process = multiprocessing.Process(target=run_bot_process, args=(api_key, index, failed_bots, deleted_bots))
            process.start()
            processes.append(process)

    for process in processes:
        process.join()

    if failed_bots:
        logger.info(f"Failed to start bots with the following API keys: {failed_bots}")
    logger.info(f"All bots started successfully.")

if __name__ == '__main__':
    main()
